#include <iostream>
#include <vector>

using namespace std;

const int BOARD_SIZE = 3;
const char EMPTY = ' ', X = 'X', O = 'O';

// Двумерный массив 3x3 представляет игровое поле
vector<vector<char>> board(BOARD_SIZE, vector<char>(BOARD_SIZE, EMPTY));

// Функция для отображения игрового поля на консоли
void printBoard() {
    cout << "+---+---+---+" << endl;
    for (int i = 0; i < BOARD_SIZE; i++) {
        cout << "| ";
        for (int j = 0; j < BOARD_SIZE; j++) {
            cout << board[i][j] << " | ";
        }
        cout << endl << "+---+---+---+" << endl;
    }
}

// Функция для проверки, заполнены ли все клетки
bool isBoardFull() {
    for (int i = 0; i < BOARD_SIZE; i++) {
        for (int j = 0; j < BOARD_SIZE; j++) {
            if (board[i][j] == EMPTY) {
                return false;
            }
        }
    }
    return true;
}

// Функция для проверки, выиграл ли игрок с заданным символом
bool checkWin(char player) {
    // Проверка по горизонтали
    for (int i = 0; i < BOARD_SIZE; i++) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
            return true;
        }
    }

    // Проверка по вертикали
    for (int i = 0; i < BOARD_SIZE; i++) {
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
            return true;
        }
    }

    // Проверка по диагоналям
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
        return true;
    }
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
        return true;
    }

    return false;
}

int main() {
    char currentPlayer = X;
    bool gameOver = false;

    while (!gameOver) {
        // Вывод игрового поля
        printBoard();

        // Получение хода игрока
        int row, col;
        cout << "Игрок " << currentPlayer << ", введите номер строки и номер столбца (от 1 до 3): ";
        cin >> row >> col;

        // Валидация хода
        if (row < 1 || row > BOARD_SIZE || col < 1 || col > BOARD_SIZE || board[row - 1][col - 1] != EMPTY) {
            cout << "Неверный ход. Попробуйте снова." << endl;
            continue;
        }

        // Выполнение хода
        board[row - 1][col - 1] = currentPlayer;

        // Проверка на выигрыш
        if (checkWin(currentPlayer)) {
            gameOver = true;
            cout << "Игрок " << currentPlayer << " победил!" << endl;
        }

        // Ничья
        else if (isBoardFull()) {
            gameOver = true;
            cout << "Ничья!" << endl;
        }

        // Переключение игрока
        currentPlayer = (currentPlayer == X) ? O : X;
    }

    return 0;
}
